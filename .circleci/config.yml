build: &build
  working_directory: /mnt/crate
  steps:
    - checkout
    - attach_workspace:
        at: "."
    - restore_cache:
        keys:
          - cargo-v1-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
    - run:
        name: Print version information
        command: rustc --version; cargo --version; python -V;
    - run:
        name: Build 35
        command: |
          pip install -r requirement-dev.txt && python compile.py build
    - run:
        name: Test 35
        command: |
          cp build/lib/py_sourcemap/*.so py_sourcemap/ && \
          pytest
    - run:
        name: Prune the output files
        command: |
          for file in target/release/* target/release/.??*; do
            [ -d $file -o ! -x $file ] && rm -r $file
          done
    - persist_to_workspace:
        root: "."
        paths:
          - ./*

deploy: &deploy
  docker:
    - image: broooooklyn/rust-python:latest
  working_directory: /mnt/crate
  steps:
    - attach_workspace:
        at: "."
    - run:
        name: "Deploy to Github Release"
        command: |
          if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            export GIT_TAG="$(git describe --tags $(git rev-list --tags --max-count=1))"; \
            ghr -u "${CIRCLE_PROJECT_USERNAME}" -r "${CIRCLE_PROJECT_REPONAME}" "${GIT_TAG}" build/lib/py_sourcemap/*.so && \
            python upload-ali-oss.py
          else
            echo "Not a release, skipping publish"
          fi

version: 2
jobs:
  cargo_fetch:
    docker:
      - image: rust:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}-
            - cargo-v1-
      - run:
          name: fetch and update
          command: |
            cargo update && \
            cargo fetch
      - persist_to_workspace:
          root: "."
          paths:
            - Cargo.lock
      - save_cache:
          key: cargo-v1-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry
            - /usr/local/cargo/git
  build35:
    <<: *build
    docker:
      - image: broooooklyn/rust-python:3.5

  build36:
    <<: *build
    docker:
      - image: broooooklyn/rust-python:3.6

  build37:
    <<: *build
    docker:
      - image: broooooklyn/rust-python:3.7

  deploy35: *deploy

  deploy36: *deploy

  deploy37: *deploy

  pip_deploy:
    docker:
      - image: broooooklyn/rust-python:latest
    working_directory: /mnt/crate
    steps:
      - checkout
      - run:
          name: "Deploy to Github Release"
          command: |
            if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
            then
              pip install -r requirement-dev.txt && make release
            else
              echo "Not a release, skipping publish"
            fi

  nightly:
    machine: true
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build . -t broooooklyn/rust-python:3.5 --build-arg PYTHON_VERSION=3.5
      - run: docker push broooooklyn/rust-python:3.5
      - run: docker build . -t broooooklyn/rust-python:3.6 --build-arg PYTHON_VERSION=3.6
      - run: docker push broooooklyn/rust-python:3.6
      - run: docker build . -t broooooklyn/rust-python:3.7 --build-arg PYTHON_VERSION=3.7
      - run: docker tag broooooklyn/rust-python:3.7 broooooklyn/rust-python:latest
      - run: docker push broooooklyn/rust-python:3.7
      - run: docker push broooooklyn/rust-python:latest
workflows:
  version: 2
  build_all_versions:
    jobs:
      - cargo_fetch
      - build35:
          requires:
            - cargo_fetch
      - deploy35:
          requires:
            - build35
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - build36:
          requires:
            - cargo_fetch
      - deploy36:
          requires:
            - build36
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - build37:
          requires:
            - cargo_fetch
      - deploy37:
          requires:
            - build37
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - pip_deploy:
          requires:
            - deploy35
            - deploy36
            - deploy37
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
